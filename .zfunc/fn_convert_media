# $HOME/.zfunc
fn_convert_media() {
  local input_file="$1"
  local output_ext="$2"
  local supported_exts=" mp3 aac m4a flac wav ogg opus mp4 mkv avi mov webm flv wmv "
  local usage=(
    "Usage: fn_convert_media input_file output_extension [ffmpeg_options]"
    "Convert a media file to another format using FFmpeg."
    "Arguments:"
    "  input_file        Required. Path to input media file."
    "  output_extension  Required. Desired output file extension (e.g., mkv, mp3, aac)."
    "  ffmpeg_options    Optional. Additional FFmpeg options."
    "Example:"
    "  fn_convert_media input.mp4 mkv -c:v copy -c:a aac"
    "  fn_convert_media input.mp3 wav"
    "  fn_convert_media input.mp3 wav -c:a libmp3lame -b:a 192k"
    "Supported formats"
    "Audio: mp3, aac, m4a, flac, wav, ogg, opus"
    "Video: mp4, mkv, avi, mov, webm, flv, wmv"
  )

  if [[ "$input_file" == "-h" || "$input_file" == "--help" ]]; then
    printf "%s\n" "${usage[@]}"
    return 0
  fi

  if [[ -z "$input_file" || -z "$output_ext" ]]; then
    printf "Error: input_file and output_extension required\n"
    printf "%s\n" "${usage[@]}"
    return 1
  fi

  shift 2
  local ffmpeg_options=("$@")

  if [[ ! -f "$input_file" ]]; then
    printf "Error: The file %s does not exist\n" "$input_file"
    return 1
  fi

  local ext="${input_file##*.}"
  ext="${ext:l}"
  if [[ " $supported_exts " != *" $ext "* ]]; then
    printf "Error: Extension .%s is not supported\n" "$ext"
    return 1
  fi

  local format
  case "${output_ext#.}" in
    mkv) format="matroska" ;;
    aac) format="adts" ;;
    m4a) format="ipod" ;;
    *) format="${output_ext#.}" ;;
  esac

  if ! ffmpeg -muxers 2>/dev/null | grep -qw "$format"; then
    printf "Error: The format %s is not supported by FFmpeg\n" "$format"
    return 1
  fi

  local output_file="${input_file%.*}.$output_ext"

  if [[ -f "$output_file" ]]; then
    printf "Error: File %s already exists. Delete %s or choose different name\n" "$output_file" "$output_file"
    return 1
  fi

  ffmpeg -i "$input_file" "${ffmpeg_options[@]}" "$output_file" || {
    printf "Error: Failed to convert %s to %s\n" "$input_file" "$output_file"
    return 1
  }
}
