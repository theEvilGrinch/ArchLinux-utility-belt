# $HOME/.zfunc/

fn_convert_media() {
  local input_file="$1"
  local output_ext="$2"
  local ffmpeg_options="$3"
  local usage=(
    "Usage: fn_convert_media input_file output_extension [\"ffmpeg_options\"]"
    "Convert a media file to another format using FFmpeg."
    "Arguments:"
    "  input_file         Required. Path to the input media file."
    "  output_extension   Required. Desired output file extension (e.g., mkv, mp3, aac)."
    "  [ffmpeg_options]   Optional. Additional FFmpeg options as a double quoted string."
    "Example:"
    "  fn_convert_media input.mp4 mkv \"-c:v copy -c:a aac\""
  )

  if [[ "$input_file" == "-h" || "$input_file" == "--help" ]]; then
    printf "%s\n" "${usage[@]}"
    return 1
  fi

  if [[ -z "$input_file" || -z "$output_ext" ]]; then
    printf "\n\t input_file and output_extension required\n\n"
    printf "%s\n" "${usage[@]}"
    return 1
  fi

  if [[ ! -f "$input_file" ]]; then
    printf "Error: The file \"%s\" does not exist." "$input_file"
    return 1
  fi

  local format
  case "${output_ext#.}" in
    mkv) format="matroska" ;;
    aac) format="adts" ;;
    m4a) format="ipod" ;;
    *) format="${output_ext#.}" ;;
  esac

  if ! ffmpeg -muxers 2>/dev/null | grep -qw "$format"; then
    echo "Error: The format ${format} is not supported by FFmpeg."
    return 1
  fi

  local output_file="${input_file%.*}.$output_ext"

  if [[ -f "$output_file" ]]; then
    echo "Error: The file ${output_file} already exists. Delete it or choose a different name."
    return 1
  fi

  eval ffmpeg -i "$input_file" "$ffmpeg_options" "$output_file"
}
