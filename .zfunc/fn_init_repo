#!/usr/bin/env zsh
# $HOME/.zfunc
fn_init_repo() {
  local repo_name="${1:-./}"
  local template_dir="$HOME/templates"

  local usage=(
    "Usage: fn_init_repo [repo_name]"
    ""
    "Initialize a new git repository with template files."
    "Copies .gitignore and .dockerignore from $template_dir if they exist"
    ""
    "repo_name (optional): Name for the new repository. May include a path, e.g. ./Path/My-new-repo. If not provided, uses current directory."
  )

  if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    printf "%s\n" "${usage[@]}"
    return 0
  fi

  if [[ "$1" != "" && -d "$repo_name" ]]; then
    printf "Error: Directory '%s' already exists.\n" "$repo_name"
    return 1
  fi

  mkdir -p "$repo_name" || { printf "Error: Failed to create directory '%s'\n" "$repo_name"; return 1; }

  cd "$repo_name" || { printf "Error: Failed to enter directory '%s'\n" "$repo_name"; return 1; }

  git init || { printf "Error: Failed to initialize git repository\n"; return 1; }

  if [[ -f "$template_dir/.gitignore" ]]; then
    cp "$template_dir/.gitignore" . || printf "Warning: .gitignore not found in %s\n" "$template_dir"
  fi

  if [[ -f "$template_dir/.dockerignore" ]]; then
    cp "$template_dir/.dockerignore" . || printf "Warning: .dockerignore not found in %s\n" "$template_dir"
  fi

  if [[ -f "$template_dir/.editorconfig" ]]; then
    cp "$template_dir/.editorconfig" . || printf "Warning: .editorconfig not found in %s\n" "$template_dir"
  fi

  printf "Copied template files from: %s\n" "$template_dir"
}
