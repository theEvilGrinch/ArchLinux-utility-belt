# $HOME/.zfunc
fn_convert_media_batch() {
  local input_folder="$1"
  local output_folder="$2"
  local output_ext="$3"
  local supported_exts=" mp3 aac m4a flac wav ogg opus mp4 mkv avi mov webm flv wmv "
  local usage=(
    "Usage: fn_convert_media_batch input_folder output_folder output_ext [ffmpeg_options]"
    "Convert all audio or video files in a directory to a specified format using FFmpeg."
    "Arguments:"
    "  input_folder      Required. Path to input folder."
    "  output_folder     Required. Path to output folder."
    "  output_extension  Required. Desired output file extension (e.g., mkv, mp3, aac)."
    "  ffmpeg_options    Optional. Additional FFmpeg options."
    "Example:"
    "  fn_convert_media_batch ./folder1 ./folder2 mkv -c:v copy -c:a aac"
    "  fn_convert_media_batch . . wav"
    "Supported formats"
    "Audio: mp3, aac, m4a, flac, wav, ogg, opus"
    "Video: mp4, mkv, avi, mov, webm, flv, wmv"
  )

  if [[ "$input_folder" == "-h" || "$input_folder" == "--help" ]]; then
    printf "%s\n" "${usage[@]}"
    ret
  fi

  if [[ ! -d "$input_folder" || ! -d "$output_folder" ]]; then
    printf "Error: Both input_folder and output_folder are required and must exist\n"
    printf "%s\n" "${usage[@]}"
    return 1
  fi

  if [[ -z "$output_ext" ]]; then
    printf "Error: No output file extension specified\n"
    printf "%s\n" "${usage[@]}"
    return 1
  fi

  local format
  case "${output_ext#.}" in
    mkv) format="matroska" ;;
    aac) format="adts" ;;
    m4a) format="ipod" ;;
    *) format="${output_ext#.}" ;;
  esac

  if ! ffmpeg -muxers 2>/dev/null | grep -qw "$format"; then
    printf "Error: The format %s is not supported by FFmpeg\n" "$format"
    printf "%s\n" "${usage[@]}"
    return 1
  fi

  shift 3
  local ffmpeg_options=("$@")

  for input_file in "$input_folder"/*; do
    if [[ -f "$input_file" ]]; then
      local ext="${input_file##*.}"
      ext="${ext:l}"
      if [[ " $supported_exts " != *" $ext "* ]]; then
        continue
      fi

      local base_name
      base_name=$(basename "$input_file" | sed "s/\.[^.]*$//")
      local output_file="${output_folder}/${base_name}.${output_ext}"

      if [[ -f "$output_file" ]]; then
        printf "Warning: Output file %s already exists. Skipping\n" "$output_file"
        continue
      fi

      printf "Converting %s to %s\n" "$input_file" "$output_file"
      ffmpeg -i "$input_file" "${ffmpeg_options[@]}" "$output_file" || {
        printf "Error: Failed to convert %s\n" "$input_file"
      }
    fi
  done
}
